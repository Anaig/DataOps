parameters:
  environment: test
  TerraformArguments: ''
  TerraformEnvVariables:

jobs:

- job: Terraform
  displayName: Terraform
  # Avoid concurrent Terraform runs on PRs, which would result in failures due to exclusive lock on remote state file.
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), variables['RUN_FLAG_TERRAFORM']))
  pool:
    vmImage: ubuntu-latest
  steps:

  - template: terraform-init-template.yml
    parameters:
      TerraformDirectory: Python/azureml-pipeline-databricks/environment_setup/terraform
      environment: ${{ parameters.environment }}

  # Using bash instead of Terraform extension because of following issues:
  # - https://github.com/microsoft/azure-pipelines-extensions/issues/748
  # - https://github.com/microsoft/azure-pipelines-extensions/issues/725
  # - https://github.com/microsoft/azure-pipelines-extensions/issues/747
  - bash: |
      set -eu
      export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
      terraform apply -input=false -auto-approve -var environment=${{ parameters.environment }} ${{ parameters.TerraformArguments }}
    displayName: Terraform apply
    workingDirectory: Python/azureml-pipeline-databricks/environment_setup/terraform
    env:
      ${{ parameters.TerraformEnvVariables }}

- job: ReadTerraform
  dependsOn: Terraform
  condition: always()
  displayName: Read outputs
  pool:
    vmImage: ubuntu-latest
  steps:

  - template: terraform-init-template.yml
    parameters:
      TerraformDirectory: Python/azureml-pipeline-databricks/environment_setup/terraform
      environment: ${{ parameters.environment }}

  - bash: |
      set -eu

      echo "Setting job variables from Terraform outputs:"
      terraform output -json | jq -r '
        . as $in
        | keys[]
        | ["- " + .]
        | @tsv'

      terraform output -json | jq -r '
        . as $in
        | keys[]
        | ["##vso[task.setvariable variable=" + . + ";isOutput=true;isSecret=" + ($in[.].sensitive | tostring) + "]" + ($in[.].value | tostring)]
        | @tsv'

    name: Outputs
    displayName: Read Terraform outputs
    workingDirectory: Python/azureml-pipeline-databricks/environment_setup/terraform
