pr: none
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - infrastructure/

variables:
- group: terraform

pool:
  vmImage: ubuntu-latest

jobs:
- template: infrastructure/terraform-job-template.yml
  parameters:
    environment: test
    TerraformBackendResourceGroup: $(TERRAFORM_BACKEND_RG)
    TerraformBackendStorageAccount: $(TERRAFORM_BACKEND_STORAGE)
    TerraformEnvVariables:
      TF_VAR_location: $(LOCATION)
      TF_VAR_devops_mlpipeline_sp_object_id: $(MLPIPELINE_SP_OBJECT_ID)
      TF_VAR_aml_run_sp_client_id: $(AML_RUN_SP_CLIENT_ID)
      TF_VAR_aml_run_sp_client_secret: $(AML_RUN_SP_CLIENT_SECRET)

- job: Post_terraform
  dependsOn: Terraform
  variables:
    resource_group_name: $[ dependencies.Terraform.outputs['Terraform.TerraformOutputs.resource_group_name'] ]
    aml_workspace_name: $[ dependencies.Terraform.outputs['Terraform.TerraformOutputs.aml_workspace_name'] ]
  steps:
    - task: AzureCLI@1
      displayName: Build train pipeline
      inputs:
        azureSubscription: DataOpsML Azure DevOps ML Model CI/CD pipeline
        scriptLocation: inlineScript
        workingDirectory: Python/azureml-pipeline-databricks
        inlineScript: |
          az extension  add -n azure-cli-ml
          az ml folder attach -g $(resource_group_name) -w $(aml_workspace_name)
          az ml datastore attach-blob -a stmyappdataopstrtest -c trainingdata -n trainingdata
          python -m ml_service.pipelines.build_train_pipeline
