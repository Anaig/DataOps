pr: none
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - infrastructure/

variables:
- group: terraform
- name: EXPERIMENT_NAME
  value: ci

pool:
  vmImage: ubuntu-latest

jobs:
- template: infrastructure/terraform-job-template.yml
  parameters:
    environment: test
    TerraformBackendResourceGroup: $(TERRAFORM_BACKEND_RG)
    TerraformBackendStorageAccount: $(TERRAFORM_BACKEND_STORAGE)
    TerraformEnvVariables:
      TF_VAR_location: $(LOCATION)
      TF_VAR_devops_mlpipeline_sp_object_id: $(MLPIPELINE_SP_OBJECT_ID)
      TF_VAR_aml_run_sp_client_id: $(AML_RUN_SP_CLIENT_ID)
      TF_VAR_aml_run_sp_client_secret: $(AML_RUN_SP_CLIENT_SECRET)

- job: Build_Pipeline
  dependsOn: Terraform
  displayName: Build ML Training Pipeline
  variables:
    RESOURCE_GROUP: $[ dependencies.Terraform.outputs['TerraformOutputs.resource_group_name'] ]
    AML_WORKSPACE_NAME: $[ dependencies.Terraform.outputs['TerraformOutputs.aml_workspace_name'] ]
    DATABRICKS_WORKSPACE_NAME: $[ dependencies.Terraform.outputs['TerraformOutputs.databricks_workspace_name'] ]
  steps:
    - task: AzureCLI@1
      name: TrainPipeline
      displayName: Build train pipeline
      inputs:
        azureSubscription: DataOpsML Azure DevOps ML Model CI/CD pipeline
        scriptLocation: inlineScript
        workingDirectory: Python/azureml-pipeline-databricks/azureml
        inlineScript: |
          set -eu  # fail on error
          set -x  # verbose
          az extension add -n azure-cli-ml
          az ml folder attach -g $RESOURCE_GROUP -w $AML_WORKSPACE_NAME
          az ml datastore attach-blob -a stmyappdataopstrtest -c trainingdata -n trainingdata
          az ml run submit-script -e $EXPERIMENT_NAME-ci -c build_ml_pipeline.yaml -t run_info.json build_ml_pipeline.py --databricks_workspace_name $DATABRICKS_WORKSPACE_NAME --build_id $BUILD_BUILDID
          run_id=$(jq -r .run_id run_info.json)
          set +x  # non-verbose
          echo -n "##vso[task.setvariable variable=AMLPIPELINE_ID;isOutput=true]"
          az ml run show --run $run_id -e $EXPERIMENT_NAME-ci --query tags.PipelineId -o tsv

- job: Run_ML_Pipeline
  dependsOn:
  - Terraform
  - Build_Pipeline
  displayName: Trigger ML Training Pipeline
  pool: server
  variables:
    RESOURCE_GROUP: $[ dependencies.Terraform.outputs['TerraformOutputs.resource_group_name'] ]
    AML_WORKSPACE_NAME: $[ dependencies.Terraform.outputs['TerraformOutputs.aml_workspace_name'] ]
    DATABRICKS_WORKSPACE_NAME: $[ dependencies.Terraform.outputs['TerraformOutputs.databricks_workspace_name'] ]
    AMLPIPELINE_ID: $[ dependencies.Build_Pipeline.outputs['TrainPipeline.AMLPIPELINE_ID'] ]
  steps:
  - task: ms-air-aiagility.vss-services-azureml.azureml-restApi-task.MLPublishedPipelineRestAPITask@0
    displayName: Invoke ML pipeline
    inputs:
      azureSubscription: DataOpsML Azure DevOps Azure ML Workspace
      PipelineId: $(AMLPIPELINE_ID)
      ExperimentName: $(EXPERIMENT_NAME)
