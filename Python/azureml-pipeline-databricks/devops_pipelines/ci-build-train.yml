pr: none
trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - docs/
    - environment_setup/
    - azureml/ml_service/util/smoke_test_scoring_service.py

variables:
- template: variables.yml
- group: ml-infrastructure

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'Model_CI'
  displayName: 'Model CI'

  jobs:
  - template: base-pipeline.yml
    parameters:
      buildSteps:  
        - task: AzureCLI@1
          inputs:
            azureSubscription: DataOpsML Azure DevOps ML Model CI/CD pipeline
            scriptLocation: inlineScript
            inlineScript: |
              set -e # fail on error
              # Invoke the Python building and publishing a training pipeline
              export DATABRICKS_REGION=$(az resource show -g "$(RESOURCE_GROUP)" --resource-type Microsoft.Databricks/workspaces -n "$(DB_WORKSPACE_NAME)" --query location -o tsv)
              python ml_service/pipelines/build_train_pipeline.py
            workingDirectory: azureml
          displayName: 'Publish Azure Machine Learning Pipeline'

- stage: 'Trigger_AML_Pipeline'
  displayName: 'Train model'
  jobs:
  - job: "Get_Pipeline_ID"
    condition: and(succeeded(), eq(coalesce(variables['auto-trigger-training'], 'true'), 'true'))
    displayName: "Get Pipeline ID for execution"
    container: mcr.microsoft.com/mlops/python:latest
    timeoutInMinutes: 0
    steps:
    - task: AzureCLI@1
      inputs:
        azureSubscription: DataOpsML Azure DevOps ML Model CI/CD pipeline
        scriptLocation: inlineScript
        inlineScript: |
          set -e # fail on error
          python ml_service/pipelines/run_train_pipeline.py --output_pipeline_id_file "pipeline_id.txt" --skip_train_execution
          # Set AMLPIPELINEID variable for next AML Pipeline task in next job
          AMLPIPELINEID="$(cat pipeline_id.txt)"
          echo "##vso[task.setvariable variable=AMLPIPELINEID;isOutput=true]$AMLPIPELINEID"
        workingDirectory: azureml
      name: 'getpipelineid'
      displayName: 'Get Pipeline ID'
  - job: "Run_ML_Pipeline"
    dependsOn: "Get_Pipeline_ID"
    displayName: "Trigger ML Training Pipeline"
    pool: server
    variables:
      AMLPIPELINE_ID: $[ dependencies.Get_Pipeline_ID.outputs['getpipelineid.AMLPIPELINEID'] ]
    steps:
    - task: ms-air-aiagility.vss-services-azureml.azureml-restApi-task.MLPublishedPipelineRestAPITask@0
      displayName: 'Invoke ML pipeline'
      inputs:
        azureSubscription: aml-workspace-connection
        PipelineId: '$(AMLPIPELINE_ID)'
        ExperimentName: '$(EXPERIMENT_NAME)'
        PipelineParameters: '"ParameterAssignments": {"model_name": "$(MODEL_NAME)"}'
  - job: "Training_Run_Report"
    dependsOn: "Run_ML_Pipeline"
    displayName: "Determine if evaluation succeeded and new model is registered"
    container: mcr.microsoft.com/mlops/python:latest
    timeoutInMinutes: 0
    steps:
    - template: template-get-model-version.yml

- stage: 'Deploy_AKS'
  displayName: 'Deploy to AKS'
  dependsOn: Trigger_AML_Pipeline
  condition: succeeded()
  jobs:
  - job: "Deploy_AKS"
    displayName: "Deploy to AKS"
    container: mcr.microsoft.com/mlops/python:latest
    timeoutInMinutes: 0
    steps:
    - template: template-get-model-version.yml
    - task: AzureCLI@1
      displayName: 'Azure ML Model Deploy'
      inputs:
        azureSubscription: aml-workspace-connection
        scriptLocation: inlineScript
        inlineScript: |
          set -e # fail on error
          python code/scoring/aks_deployment.py --output_aks_deployment_name "deployment_name.txt"
          # Output aks service name to Azure DevOps
          AKS_DEPLOYMENT_NAME="$(cat deployment_name.txt)"
          echo "##vso[task.setvariable variable=AKS_DEPLOYMENT_NAME]$AKS_DEPLOYMENT_NAME"
        workingDirectory: azureml
    - task: AzureCLI@1
      displayName: 'Smoke test'
      inputs:
        azureSubscription: aml-workspace-connection
        scriptLocation: inlineScript
        inlineScript: |
          set -e # fail on error
          python ml_service/util/smoke_test_scoring_service.py --service "$(AKS_DEPLOYMENT_NAME)"
        workingDirectory: azureml
