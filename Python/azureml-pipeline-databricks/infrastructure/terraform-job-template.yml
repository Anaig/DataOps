parameters:
  environment: test
  TerraformArguments: ''
  TerraformEnvVariables:
  TerraformVersion: 0.12.20
  TerraformBackendServiceConnection: DataOpsML Azure DevOps Terraform pipeline
  TerraformEnvironmentServiceConnection: DataOpsML Azure DevOps Terraform pipeline
  TerraformBackendResourceGroup: terraform
  TerraformBackendStorageAccount: dataopsterraform
  TerraformBackendStorageContainer: terraformstate

jobs:

- job: Terraform
  displayName: Terraform
  steps:

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: Install Terraform
    inputs:
      terraformVersion: ${{ parameters.TerraformVersion }}

  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: Terraform init
    inputs:
      workingDirectory: Python/azureml-pipeline-databricks/infrastructure/terraform
      backendServiceArm: ${{ parameters.TerraformBackendServiceConnection }}
      backendAzureRmResourceGroupName: ${{ parameters.TerraformBackendResourceGroup }}
      backendAzureRmStorageAccountName: ${{ parameters.TerraformBackendStorageAccount }}
      backendAzureRmContainerName: ${{ parameters.TerraformBackendStorageContainer }}
      backendAzureRmKey: ${{ parameters.environment }}.tfstate

  - task: AzureCLI@1
    displayName: Get ARM credentials for Terraform
    inputs:
      azureSubscription: ${{ parameters.TerraformEnvironmentServiceConnection }}
      scriptLocation: inlineScript
      inlineScript: |
        set -eu
        subscriptionId=$(az account show --query id -o tsv)
        echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
        echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$servicePrincipalKey"
        echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
        echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
      addSpnToEnvironment: true

  # Using bash instead of Terraform extension because of following issues:
  # - https://github.com/microsoft/azure-pipelines-extensions/issues/748
  # - https://github.com/microsoft/azure-pipelines-extensions/issues/725
  # - https://github.com/microsoft/azure-pipelines-extensions/issues/747

  - bash: |
      set -eu
      export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
      terraform apply -input=false -auto-approve -var environment=${{ parameters.environment }} ${{ parameters.TerraformArguments }}
    displayName: Terraform apply
    workingDirectory: Python/azureml-pipeline-databricks/infrastructure/terraform
    env:
      ${{ parameters.TerraformEnvVariables }}

  - bash: |
      set -eu
      terraform output -json | jq -r '
        . as $in
        | keys[]
        | ["##vso[task.setvariable variable=" + . + ";isOutput=true;isSecret=" + ($in[.].sensitive | tostring) + "]" + ($in[.].value | tostring)]
        | @tsv'
    name: TerraformOutputs
    displayName: Export terraform outputs
    workingDirectory: Python/azureml-pipeline-databricks/infrastructure/terraform
